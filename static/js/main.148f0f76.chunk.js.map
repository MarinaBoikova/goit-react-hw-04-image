{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","App.module.css","components/Searchbar/Searchbar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["module","exports","SearchBar","state","inputValue","handleChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","warn","this","className","s","searchbar","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","searchQuery","currentPage","url","axios","get","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","imageGalleryItem","imageGalleryItemImage","src","alt","ImageGallery","imageGallery","Button","button","Spiner","spinner","color","height","width","modalRoot","document","querySelector","Modal","children","onClose","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","App","useState","setSearchQuery","setImages","setCurrentPage","isLoading","setIsLoading","showModal","setShowModal","bigImageUrl","setBigImageUrl","imageStatus","setImageStatus","fetchImagesGallery","a","options","api","data","total","error","filteredData","hits","hit","prevImages","console","log","toggleModal","prevShowModal","shouldRenderLoadMoreBtn","length","onLoad","query","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.148f0f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2VBqt\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__lTtvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GTWn\",\"modal\":\"Modal_modal__21FbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__162ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1zBwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1UEiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1Ol7P\",\"searchForm\":\"Searchbar_searchForm__3S6Rr\",\"searchFormButton\":\"Searchbar_searchFormButton__2w6HS\",\"searchFormInput\":\"Searchbar_searchFormInput__2SHNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__oDzKe\"};","import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport s from './Searchbar.module.css';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    inputValue: PropTypes.string,\n  };\n\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = event => {\n    this.setState({ inputValue: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.inputValue.trim() === '') {\n      toast.warn('Введите ваш запрос');\n      return;\n    }\n    this.props.onSubmit(this.state.inputValue);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ inputValue: '' });\n  };\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <header className={s.searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.searchForm}>\n          <button type=\"submit\" className={s.searchFormButton}>\n            <span className={s.searchFormButtonLabel}>\n              <ImSearch />\n            </span>\n          </button>\n\n          <input\n            className={s.searchFormInput}\n            type=\"text\"\n            value={inputValue}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  currentPage: PropTypes.number,\n  searchQuery: PropTypes.string,\n  isLoading: PropTypes.bool,\n  error: PropTypes.object,\n  showModal: PropTypes.bool,\n  bigImageUrl: PropTypes.string,\n  imageStatus: PropTypes.string,\n};\n\nexport default SearchBar;\n","import axios from 'axios';\nconst BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '24447293-d3f0d6bbd906e1eb5560775ff';\n\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`;\n\n  return axios.get(url);\n};\n\n// eslint-disable-next-line\nexport default { fetchImages };\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ images, onClick }) => (\n  <>\n    {images.map(({ id, webformatURL, largeImageURL }) => {\n      return (\n        <li key={id} className={s.imageGalleryItem}>\n          <img\n            className={s.imageGalleryItemImage}\n            onClick={() => onClick(largeImageURL)}\n            src={webformatURL}\n            alt=\"\"\n          />\n        </li>\n      );\n    })}\n  </>\n);\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className={s.imageGallery}>\n    <ImageGalleryItem images={images} onClick={onClick} />\n  </ul>\n);\n\nImageGallery.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className={s.button} onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst Spiner = () => {\n  return (\n    <div>\n      <Loader\n        className={s.spinner}\n        type=\"ThreeDots\"\n        color=\"#fff\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\nexport default Spiner;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const onBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={onBackdropClick}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from 'components/Searchbar/Searchbar';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport api from 'services/api';\n\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\nimport Button from 'components/Button/Button';\nimport Spinner from 'components/Loader/Loader';\nimport Modal from 'components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport 'App.module.css';\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [bigImageUrl, setBigImageUrl] = useState('');\n  const [imageStatus, setImageStatus] = useState('loading');\n\n  const onSearchHandle = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n    // console.log(query);\n    // console.log(api);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n    const fetchImagesGallery = async () => {\n      const options = {\n        searchQuery,\n        currentPage,\n      };\n      try {\n        const data = await api.fetchImages(options);\n        if (data.data.total === 0) {\n          toast.error('Нет совпадений с запросом');\n          return;\n        }\n        const filteredData = data.data.hits.map(hit => {\n          return {\n            id: hit.id,\n            webformatURL: hit.webformatURL,\n            largeImageURL: hit.largeImageURL,\n          };\n        });\n        setImages(prevImages => [...prevImages, ...filteredData]);\n      } catch (err) {\n        console.log(err);\n        toast.error('Ошибка');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchImagesGallery();\n  }, [currentPage, searchQuery]);\n\n  const loadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const onImageClick = url => {\n    setBigImageUrl(url);\n    toggleModal();\n    setImageStatus('loading');\n  };\n\n  const toggleModal = () => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  const onImageLoaded = () => {\n    setImageStatus('loaded');\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n  return (\n    <div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          {imageStatus === 'loading' && (\n            <Loader type=\"ThreeDots\" color=\"#fff\" height={80} width={80} />\n          )}\n          <img src={bigImageUrl} alt=\"\" onLoad={onImageLoaded} />\n        </Modal>\n      )}\n\n      <SearchBar onSubmit={onSearchHandle} />\n      <ImageGallery images={images} onClick={onImageClick} />\n      {isLoading && <Spinner />}\n      {shouldRenderLoadMoreBtn && <Button onClick={loadMore} />}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  searchQuery: PropTypes.string,\n  images: PropTypes.arrayOf(PropTypes.object),\n  currentPage: PropTypes.number,\n  isLoading: PropTypes.bool,\n  error: PropTypes.object,\n  showModal: PropTypes.bool,\n  bigImageUrl: PropTypes.string,\n  imageStatus: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}